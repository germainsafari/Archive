import { Command as $Command } from "@smithy/smithy-client";
import { MetadataBearer as __MetadataBearer } from "@smithy/types";
import { CodeDeployClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../CodeDeployClient";
import { ContinueDeploymentInput } from "../models/models_0";
/**
 * @public
 */
export type { __MetadataBearer };
export { $Command };
/**
 * @public
 *
 * The input for {@link ContinueDeploymentCommand}.
 */
export interface ContinueDeploymentCommandInput extends ContinueDeploymentInput {
}
/**
 * @public
 *
 * The output of {@link ContinueDeploymentCommand}.
 */
export interface ContinueDeploymentCommandOutput extends __MetadataBearer {
}
declare const ContinueDeploymentCommand_base: {
    new (input: ContinueDeploymentCommandInput): import("@smithy/smithy-client").CommandImpl<ContinueDeploymentCommandInput, ContinueDeploymentCommandOutput, CodeDeployClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    new (...[input]: [] | [ContinueDeploymentCommandInput]): import("@smithy/smithy-client").CommandImpl<ContinueDeploymentCommandInput, ContinueDeploymentCommandOutput, CodeDeployClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    getEndpointParameterInstructions(): import("@smithy/middleware-endpoint").EndpointParameterInstructions;
};
/**
 * <p>For a blue/green deployment, starts the process of rerouting traffic from instances in
 *             the original environment to instances in the replacement environment without waiting for
 *             a specified wait time to elapse. (Traffic rerouting, which is achieved by registering
 *             instances in the replacement environment with the load balancer, can start as soon as
 *             all instances have a status of Ready.) </p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { CodeDeployClient, ContinueDeploymentCommand } from "@aws-sdk/client-codedeploy"; // ES Modules import
 * // const { CodeDeployClient, ContinueDeploymentCommand } = require("@aws-sdk/client-codedeploy"); // CommonJS import
 * const client = new CodeDeployClient(config);
 * const input = { // ContinueDeploymentInput
 *   deploymentId: "STRING_VALUE",
 *   deploymentWaitType: "READY_WAIT" || "TERMINATION_WAIT",
 * };
 * const command = new ContinueDeploymentCommand(input);
 * const response = await client.send(command);
 * // {};
 *
 * ```
 *
 * @param ContinueDeploymentCommandInput - {@link ContinueDeploymentCommandInput}
 * @returns {@link ContinueDeploymentCommandOutput}
 * @see {@link ContinueDeploymentCommandInput} for command's `input` shape.
 * @see {@link ContinueDeploymentCommandOutput} for command's `response` shape.
 * @see {@link CodeDeployClientResolvedConfig | config} for CodeDeployClient's `config` shape.
 *
 * @throws {@link DeploymentAlreadyCompletedException} (client fault)
 *  <p>The deployment is already complete.</p>
 *
 * @throws {@link DeploymentDoesNotExistException} (client fault)
 *  <p>The deployment with the user or Amazon Web Services account does not exist.</p>
 *
 * @throws {@link DeploymentIdRequiredException} (client fault)
 *  <p>At least one deployment ID must be specified.</p>
 *
 * @throws {@link DeploymentIsNotInReadyStateException} (client fault)
 *  <p>The deployment does not have a status of Ready and can't continue yet.</p>
 *
 * @throws {@link InvalidDeploymentIdException} (client fault)
 *  <p>At least one of the deployment IDs was specified in an invalid format.</p>
 *
 * @throws {@link InvalidDeploymentStatusException} (client fault)
 *  <p>The specified deployment status doesn't exist or cannot be determined.</p>
 *
 * @throws {@link InvalidDeploymentWaitTypeException} (client fault)
 *  <p> The wait type is invalid. </p>
 *
 * @throws {@link UnsupportedActionForDeploymentTypeException} (client fault)
 *  <p>A call was submitted that is not supported for the specified deployment type.</p>
 *
 * @throws {@link CodeDeployServiceException}
 * <p>Base exception class for all service exceptions from CodeDeploy service.</p>
 *
 * @public
 */
export declare class ContinueDeploymentCommand extends ContinueDeploymentCommand_base {
    /** @internal type navigation helper, not in runtime. */
    protected static __types: {
        api: {
            input: ContinueDeploymentInput;
            output: {};
        };
        sdk: {
            input: ContinueDeploymentCommandInput;
            output: ContinueDeploymentCommandOutput;
        };
    };
}
